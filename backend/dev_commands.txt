# Windows install
pip install backend\requirements\virtualenv-20.16.4-py3-none-any.whl --no-index --find-links file:///../backend/requirements & python -m venv venv & venv\scripts\activate & pip install -r backend/requirements.txt --no-index --find-links file:///../backend/requirements && django-admin startproject app && cd app && django-admin startapp spa && django-admin startapp api && cd .. && xcopy "backend/app" "app" /c /i /e /h /y && if not exist .env copy .env.example .env && python app/manage.py makemigrations && python app/manage.py migrate && python app/manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@dj_zs.com', 'test1234567')" && python app/manage.py collectstatic --no-input

# Windows CI/CD

# Mac install
    ([ -d venv  ] && echo venv_activated || (python3 -m pip install virtualenv && python3 -m virtualenv venv && echo venv_created)) && source venv/bin/activate && pip install -r backend/requirements.txt && echo venv_activated && ([ -d app  ] && echo project dir exists || (source venv/bin/activate && django-admin startproject app && cd app && python3 manage.py startapp api && python3 manage.py startapp spa && cd .. && cp -R backend/app . && cp -R frontend/app . && ([ -f .env  ] && echo 1 || cp -R .env.example .env) && python3 app/manage.py makemigrations && python3 app/manage.py migrate && python3 app/manage.py collectstatic --no-input && echo ("from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@dj_zs.com', 'dj_zs12345')" | python3 app/manage.py shell) && echo init project dir done))
    
# Mac CI/CD

# Other
python app/manage.py dumpdata --format=json api > app/fixtures/api_models.json
python app/manage.py dumpdata --format=json spa > app/fixtures/api_models.json

python app/manage.py loaddata fixtures/api_models.json --app api.app_settings
python app/manage.py loaddata fixtures/spa_models.json --app spa.app_settings
